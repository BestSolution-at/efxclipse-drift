stages:
  - build-natives
  - build-java

jobs:
  include:
    - stage: build-natives
      filter_secrets: false
      name: "Windows MSVC Natives"
      os: windows
      language: shell
      install:
        - choco install awscli
          #        - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
          #        - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
          #        - travis_retry wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.0-win64-x64.zip 2>>wgeterr.log
          #        - unzip cmake-3.13.0-win64-x64.zip > /dev/null
          #        - mv cmake-3.13.0-win64-x64 cmake-install
          #        - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
          #        - cd ${TRAVIS_BUILD_DIR}
        - choco install cmake --version 3.13.0
        - choco install jdk8
        - choco install visualstudio2017buildtools
        - choco install visualstudio2017-workload-vctools
        - choco install visualstudio2017-workload-nativedesktop
      before_script:  
        - AWSPATH="/c/Program Files/Amazon/AWSCLI"
        - MSBUILDPATH="/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin"
        - PATH=$MSBUILDPATH:$AWSPATH:$PATH
      script:
        - echo "Building Windows MSVC Natives"
        - mkdir build
        - cd build
        - cmake -G "Visual Studio 15 2017 Win64" ../org.eclipse.fx.drift/src-native || cat CMakeFiles/CMakeOutput.log
        - MSBuild.exe -verbosity:minimal releng.sln
      after_success:
        - aws.exe s3 cp Debug/driftfx.dll s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/driftfx.dll
        - aws.exe s3 cp Debug/driftfx.lib s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/driftfx.lib
    - name: "MacOS GCC Natives"
      os: osx
      language: cpp
      addons:
        homebrew:
          packages:
            - awscli
      install:
        - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
        - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
        - travis_retry wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.0-Darwin-x86_64.tar.gz
        - tar -xvf cmake-3.13.0-Darwin-x86_64.tar.gz > /dev/null 2> /dev/null
        - mv cmake-3.13.0-Darwin-x86_64 cmake-install
        - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/CMake.app/Contents/bin:$PATH
        - cd ${TRAVIS_BUILD_DIR}
      script: 
        - echo "Building MacOS GCC Natives"
        - mkdir build
        - cd build
        - cmake -G "Unix Makefiles" ../org.eclipse.fx.drift/src-native || cat CMakeFiles/CMakeOutput.log
        - make
      after_success:
        - aws s3 cp libdriftfx.dylib s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/macos/libdriftfx.dylib
    - name: "Linux GCC Natives"
      os: linux
      language: cpp
      compiler:
        - gcc
      cache:
        directories:
        - $HOME/.m2
      before_install:
        - sudo apt-get install mesa-common-dev
        - sudo apt-get install cmake
        - pip install --user awscli
      install:
        - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
        - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
        - travis_retry wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.tar.gz
        - tar -xvf cmake-3.13.0-Linux-x86_64.tar.gz > /dev/null
        - mv cmake-3.13.0-Linux-x86_64 cmake-install
        - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
        - cd ${TRAVIS_BUILD_DIR}
      script:
        - echo "Building Linux GCC Natives"
        - mkdir build
        - cd build
        - cmake -G "Unix Makefiles" ../org.eclipse.fx.drift/src-native || cat CMakeFiles/CMakeOutput.log
        - make
      after_success:
        - aws s3 cp libdriftfx.so s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/linux/libdriftfx.so
    - stage: build-java
      name: "Java Build"
      os: linux
      language: java
      before_install:
        - pip install --user awscli
      script: 
        - echo "executing Maven"
        - mkdir natives
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/linux/libdriftfx.so natives/libdriftfx.so
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/macos/libdriftfx.dylib natives/libdriftfx.dylib
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/driftfx.dll natives/driftfx.dll
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/driftfx.lib natives/driftfx.lib
        - ls -al natives
        - mvn clean package
        - ls -al target

